CHAR_WIDTH = 9.8;

selectedIndex = 0;
corrections = [];
postRequests = [];
lastRequestTime = 0;
suggestionsHidden = false;

keydown = function(event){
	// Left/Right arrows
	if (event.keyCode == 37 || event.keyCode == 39) {
		var interval = setInterval(function (){
			window.clearInterval(interval);
			inputSelectionChanged();
		}, 10);
	}
	// Up/Down arrows
	else if(event.keyCode == 38 || event.keyCode == 40) {
		event.preventDefault();

		if(event.keyCode == 38) {
			if (selectedIndex > 0) {
				setSelectedIndex(selectedIndex - 1);
			}
		} else if(event.keyCode == 40) {
			if (selectedIndex < corrections.length - 1) {
				setSelectedIndex(selectedIndex + 1);
			}
		}
	}
	// Return
	else if (event.keyCode == 13) {
		event.preventDefault();
		chooseCorrection(selectedIndex);
	}
}

inputSelectionChanged = function(event){
	var c = document.getElementById("measure");
	var ctx = c.getContext("2d");
	ctx.font = "22px Arial";
	var textWidth = ctx.measureText($("#input")[0].value.substring(0, $("#input")[0].selectionStart)).width;

	var charIndex = $("#input")[0].selectionStart;
	var pos = $("#input").offset().left + textWidth - $("#input")[0].scrollLeft  - $("#box").width()/2;

	var minLeft = $("#input").offset().left;
	var maxLeft = $("#input").offset().left + $("#input").outerWidth() - $("#box").outerWidth();

	//console.log("Pos: " + pos + ", Min: " + minLeft + ", Max: " + maxLeft + ", Scroll: " + $("#input")[0].scrollLeft);

	if (pos > maxLeft) {
		pos = maxLeft;
	} else if (pos < minLeft) {
		pos = minLeft;
	}

	$("#box")[0].style.left = pos + "px";

	sendCorrectionsRequest();
}

sendCorrectionsRequest = function(){
	var wordInfo = infoAtCharIndex();

	var postParameters = {
		word: wordInfo.word,
		prevWord: wordInfo.prevWord,
		requestTime: new Date().getTime()
	}

	var request = $.post("/corrections", postParameters, function(responseJSON){
		responseObject = JSON.parse(responseJSON);

		if (responseObject.requestTime > lastRequestTime) {
			lastRequestTime = responseObject.requestTime;
			corrections = responseObject.corrections;
			//console.log(corrections);
			updateCorrections();
		}
	})
}

infoAtCharIndex = function() {
	var word = $("#input")[0].value;

	return {
		word: currentWord,
		prevWord: prevWord
	}
}

updateCorrections = function() {
	var showhide = $("#showhide")[0];
	if (corrections.length > 0) {
		showhide.style.opacity = 1;
	} else {
		showhide.style.opacity = 0;
	}

	if (suggestionsHidden) {
		for (var i = 0; i < 5; i++) {
			var sug = $("#sug" + i)[0];
			sug.style.opacity = 0;
		}
		$("#showhide")[0].innerHTML = "+ Show Suggestions";
	} else {
		$("#showhide")[0].innerHTML = "â€“";
		for (var i = 0; i < 5; i++) {
			var sug = $("#sug" + i)[0];
			if (i < corrections.length) {
				sug.innerHTML = corrections[i];
				sug.style.opacity = 1;
			} else {
				sug.style.opacity = 0;
			}
		}
	}

	if (corrections.length > 0) {
		setSelectedIndex(0);
	}
}

chooseCorrection = function(index) {
	if (index < 0 || index >= corrections.length) {
		return;
	}
	var correction = corrections[index];

	var sentence = $("#input")[0].value;

	$("#input")[0].value = correction;

	$("#input")[0].selectionStart = wordInfo.wordIndex + correction.length + 1;
	$("#input")[0].selectionEnd = $("#input")[0].selectionStart

	corrections = [];
	updateCorrections();

	inputSelectionChanged();
}

indexForEvent = function(event) {
	var y = (event.pageY - $("#box")[0].offsetTop - $("#showhide").outerHeight());
	var index = Math.floor(y / ($("#sug1")[0].clientHeight));
	//console.log("Y: " + y + ", Index: " + index + ", pageY: " + event.pageY + ", offsetY: " + $("#box")[0].offsetTop);
	return index;
}

boxClicked = function(event) {
	var index = indexForEvent(event);
	if (index == -1) {
		showhideSuggestions()
	} else {
		chooseCorrection(index);
	}
}

showhideSuggestions = function(event) {
	suggestionsHidden = !suggestionsHidden;

	updateCorrections();
}

boxHover = function(event) {
	var index = indexForEvent(event);
	setSelectedIndex(index)
}

boxRemoveHover = function(event) {
	if (selectedIndex == -1) {
		setSelectedIndex(0)
	}
}

setSelectedIndex = function(index) {
	selectedIndex = index;

	var showhide = $("#showhide")[0];
	if (index == -1) {
		showhide.style.background = "#bbb";
	} else {
		showhide.style.background = "#eee";
	}

	for (var i = 0; i < 5; i++) {
		var sug = $("#sug" + i)[0];
		if (i == selectedIndex) {
			sug.style.background = "#555";
			sug.style.color = "#fff";
		} else {
			sug.style.background = "#fff";
			sug.style.color = "#000";
		}
	}
}

$(document).bind("keydown", keydown);
$("#input").bind('click', inputSelectionChanged);
$("#input").bind('input', inputSelectionChanged);
$("#box").bind('click', boxClicked);
$("#box").bind('mouseover', boxHover);
$("#box").bind('mouseout', boxRemoveHover);
